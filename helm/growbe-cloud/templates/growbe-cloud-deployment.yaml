apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: growbe-cloud
  name: growbe-cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: growbe-cloud
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        io.kompose.service: growbe-cloud
    spec:
      containers:
      - args:
        - node
        - dist/growbe-cloud.js
        env:
        - name: DB_URL
          value: postgres://{{ .Values.cloud.pgsql.auth.username }}:{{ .Values.cloud.pgsql.auth.password }}@pgsql:5432/defaultdb
        - name: MONGO_URL
          value: mongodb://{{ .Values.cloud.mongo.auth.username }}:{{ .Values.cloud.mongo.auth.password }}@mongo:27018/growbe?authSource=admin
        - name: MQTT_URL
          value: mqtt://broker:{{ .Values.cloud.broker.port }}
        - name: NMS_API_PASSWORD
          value: "12345678"
        - name: NMS_API_URL
          value: http://nms:8000
        - name: NMS_API_USERNAME
          value: {{ .Values.cloud.nms.auth.username | squote}}
        - name: NMS_TOKEN
          value: {{ .Values.cloud.nms.auth.password | squote}}
        - name: PORT
          value: "3000"
        - name: SSO_URL
          value: http://sso:3001
        - name: DEBUG
          value: growbe:*
        - name: TZ
          value: "America/Toronto"
        - name: GITHUB_TOKEN_RO
          value: {{ .Values.cloud.confgenerator.gh_pat | squote}}
        - name: REVERSE_PROXY_ID_RSA
          value: {{ .Values.cloud.confgenerator.id_rsa | squote}}
        image: ghcr.io/growbe2/growbe-cloud/growbe-cloud:{{ .Values.cloud.version }}
        imagePullPolicy: Always
        name: growbe-cloud
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe:
          httpGet:
            path: /live
            port: http
          failureThreshold: 1
          initialDelaySeconds: 5
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          failureThreshold: 1
          initialDelaySeconds: 5
          periodSeconds: 3
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ghrc
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
status: {}
